EXECUTION CONTEXT
    JavaScript is a single-threaded interpreted language.
Every browser has its own JavaScript engine. Google Chrome 
has the V8 engine, Mozilla Firefox has SpiderMonkey, and so 
on. They all are used for the same goal, because the browsers 
cannot directly understand JavaScript code.

*Execution Context
    When the JavaScript engine scans a script file, it makes 
an environment called the Execution Context that handles the 
entire transformation and execution of the code.

    During the context runtime, the parser parses the source 
code and allocates memory for the variables and functions. The 
source code is generated and gets executed.

    There are two types of execution contexts: global and 
function. The global execution context is created when a 
JavaScript script first starts to run, and it represents the 
global scope in JavaScript. A function execution context is 
created whenever a function is called, representing the 
function's local scope.

#There are two phases of JavaScript execution context:

    1.Creation phase: In this phase, the JavaScript engine 
creates the execution context and sets up the script's 
environment. It determines the values of variables and functions 
and sets up the scope chain for the execution context.
    2.Execution phase: In this phase, the JavaScript engine 
executes the code in the execution context. It processes any 
statements or expressions in the script and evaluates any 
function calls.

for more https://www.freecodecamp.org/news/how-javascript-works-behind-the-scene-javascript-execution-context/
